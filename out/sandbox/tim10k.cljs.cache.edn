;; Analyzed by ClojureScript 1.8.34
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name sandbox.tim10k, :imports nil, :requires {cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async}, :defs {colors {:name sandbox.tim10k/colors, :file "src/sandbox/tim10k.cljs", :line 8, :column 1, :end-line 8, :end-column 12, :meta {:file "/home/jim/projects/summer/experiment/sandbox/src/sandbox/tim10k.cljs", :line 8, :column 6, :end-line 8, :end-column 12}}, make-cell {:protocol-inline nil, :meta {:file "/home/jim/projects/summer/experiment/sandbox/src/sandbox/tim10k.cljs", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([canvas x y]))}, :name sandbox.tim10k/make-cell, :variadic false, :file "src/sandbox/tim10k.cljs", :end-column 16, :method-params ([canvas x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 3, :fn-var true, :arglists (quote ([canvas x y]))}, make-scene {:protocol-inline nil, :meta {:file "/home/jim/projects/summer/experiment/sandbox/src/sandbox/tim10k.cljs", :line 19, :column 7, :end-line 19, :end-column 17, :arglists (quote ([canvas rows cols]))}, :name sandbox.tim10k/make-scene, :variadic false, :file "src/sandbox/tim10k.cljs", :end-column 17, :method-params ([canvas rows cols]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([canvas rows cols]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :recur}, :order [:recur :else]}, :doc nil}